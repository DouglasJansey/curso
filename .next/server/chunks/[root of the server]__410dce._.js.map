{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Douglas%20Jansey/Documents/Projetos/curso/repository/prisma.ts"],"sourcesContent":["\r\nimport { PrismaClient } from '@prisma/client';\r\n\r\ndeclare global {\r\n    var cachedPrisma: PrismaClient\r\n}\r\n\r\nlet prisma: PrismaClient;\r\n\r\nif(process.env.NODE_ENV === 'production'){\r\n    prisma = new PrismaClient()\r\n}else{\r\n    if(!global.cachedPrisma){\r\n        global.cachedPrisma = new PrismaClient()\r\n    }\r\n    prisma = global.cachedPrisma\r\n}\r\n\r\n\r\nexport const db = prisma;"],"names":[],"mappings":";;;AACA;;AAMA,IAAI;AAEJ,uCAAyC;;AAEzC,OAAK;IACD,IAAG,CAAC,OAAO,YAAY,EAAC;QACpB,OAAO,YAAY,GAAG,IAAI,6HAAA,CAAA,eAAY;IAC1C;IACA,SAAS,OAAO,YAAY;AAChC;AAGO,MAAM,KAAK"}},
    {"offset": {"line": 78, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 84, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Douglas%20Jansey/Documents/Projetos/curso/controller/userController/userController.ts"],"sourcesContent":["/* eslint-disable import/no-anonymous-default-export */\r\nimport { db } from '../../repository/prisma';\r\nimport * as bcrypt from 'bcrypt';\r\n\r\ntype DataType = {\r\n    user: {\r\n        nome: string;\r\n        email: string;\r\n        idade: number;\r\n        type: string;\r\n    }\r\n};\r\nclass userController {\r\n    async getUser() {\r\n        const user = await db.user.findMany();\r\n        return user;\r\n    };\r\n    \r\n    async createUser (user : DataType) {\r\n        const salt = 10;\r\n        const { type } = user\r\n        type === 'professor' && console.log(user)\r\n        // const passwordHash = await bcrypt.hash(password, salt);\r\n        // if (!password) return;\r\n        return;\r\n    };\r\n    async updateUser (id: string, { ...updateData }) {  \r\n            const user = await db.user.update({\r\n                where: {\r\n                    id\r\n                },\r\n                data: {\r\n                    ...updateData\r\n                }\r\n            });\r\n            const {email, nome} = user\r\n         return {email, name};\r\n    };\r\n    async deleteUser  ( id: string) {\r\n        const userDelete = await db.user.delete({\r\n            where: {\r\n                id\r\n            }});\r\n        return userDelete;\r\n    };\r\n}\r\nexport default new userController();"],"names":[],"mappings":"AAAA,qDAAqD;;;AACrD;;AAWA,MAAM;IACF,MAAM,UAAU;QACZ,MAAM,OAAO,MAAM,sHAAA,CAAA,KAAE,CAAC,IAAI,CAAC,QAAQ;QACnC,OAAO;IACX;IAEA,MAAM,WAAY,IAAe,EAAE;QAC/B,MAAM,OAAO;QACb,MAAM,EAAE,IAAI,EAAE,GAAG;QACjB,SAAS,eAAe,QAAQ,GAAG,CAAC;QACpC,0DAA0D;QAC1D,yBAAyB;QACzB;IACJ;IACA,MAAM,WAAY,EAAU,EAAE,EAAE,GAAG,YAAY,EAAE;QACzC,MAAM,OAAO,MAAM,sHAAA,CAAA,KAAE,CAAC,IAAI,CAAC,MAAM,CAAC;YAC9B,OAAO;gBACH;YACJ;YACA,MAAM;gBACF,GAAG,UAAU;YACjB;QACJ;QACA,MAAM,EAAC,KAAK,EAAE,IAAI,EAAC,GAAG;QACzB,OAAO;YAAC;YAAO;QAAI;IACxB;IACA,MAAM,WAAc,EAAU,EAAE;QAC5B,MAAM,aAAa,MAAM,sHAAA,CAAA,KAAE,CAAC,IAAI,CAAC,MAAM,CAAC;YACpC,OAAO;gBACH;YACJ;QAAC;QACL,OAAO;IACX;AACJ;uCACe,IAAI"}},
    {"offset": {"line": 127, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 133, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Douglas%20Jansey/Documents/Projetos/curso/src/app/api/user/route.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\r\nimport userConroller from \"../../../../controller/userController/userController\";\r\n\r\nexport async function GET() {\r\n    return NextResponse.json({ message: \"Hello World\" }, { status: 200 });\r\n}\r\nexport async function POST(req: Request) {\r\n    const body = await req.json()\r\n    userConroller.createUser(body)\r\n    return NextResponse.json( body, { status: 200 });\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,eAAe;IAClB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;QAAE,SAAS;IAAc,GAAG;QAAE,QAAQ;IAAI;AACvE;AACO,eAAe,KAAK,GAAY;IACnC,MAAM,OAAO,MAAM,IAAI,IAAI;IAC3B,gJAAA,CAAA,UAAa,CAAC,UAAU,CAAC;IACzB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAE,MAAM;QAAE,QAAQ;IAAI;AAClD"}},
    {"offset": {"line": 155, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}